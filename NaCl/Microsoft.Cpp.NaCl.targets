<!--
***********************************************************************************************
(c) 2011 Gavin Pugh http://www.gavpugh.com/ - Released under the open-source zlib license
***********************************************************************************************
-->

<!-- Largely based on: MSBuild\Microsoft.Cpp\v4.0\Platforms\Win32\Microsoft.Cpp.Win32.targets -->

<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(VCTargetsPath)\Platforms\NaCl\ImportBefore\*.targets" Condition="Exists('$(VCTargetsPath)\Platforms\NaCl\ImportBefore')" />
  <Import Project="$(VCTargetsPath)\Microsoft.CppCommon.targets" />

  <UsingTask TaskName="GCCCompile" AssemblyFile="$(VCTargetsPath)\Platforms\NaCl\vs-nacl.Build.CPPTasks.NaCl.dll" />
  <UsingTask TaskName="GCCLink" AssemblyFile="$(VCTargetsPath)\Platforms\NaCl\vs-nacl.Build.CPPTasks.NaCl.dll" />
  <UsingTask TaskName="GCCLib" AssemblyFile="$(VCTargetsPath)\Platforms\NaCl\vs-nacl.Build.CPPTasks.NaCl.dll" />
  <UsingTask TaskName="VCMessage" AssemblyName="Microsoft.Build.CppTasks.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />

  <PropertyGroup>
    <!-- Enable incremental build by enable file tracking in tasks-->
    <TrackFileAccess Condition="'$(TrackFileAccess)' == ''">true</TrackFileAccess>
  </PropertyGroup>


  <!-- *******************************************************************************************
        CLCompile
       ******************************************************************************************* -->

  <Target Name="ClCompile"
          Condition="'@(ClCompile)' != ''"
          DependsOnTargets="SelectClCompile">

    <ItemGroup>
      <ClCompile>
        <CompileAs                    Condition="('%(ClCompile.CompileAs)' == 'Default' and '%(ClCompile.Extension)' == '.c')">CompileAsC</CompileAs>
        <CompileAs                    Condition="('%(ClCompile.CompileAs)' == 'Default' and '%(ClCompile.Extension)' == '.s')">CompileAsAsm</CompileAs>
        <CompileAs                    Condition="('%(ClCompile.CompileAs)' == 'Default' and '%(ClCompile.Extension)' == '.asm')">CompileAsAsm</CompileAs>
        <CompileAs                    Condition="('%(ClCompile.CompileAs)' == 'Default' and ('%(ClCompile.Extension)' != '.c' and '%(ClCompile.Extension)' != '.s' and '%(ClCompile.Extension)' != '.asm'))">CompileAsCpp</CompileAs>
        <MinimalRebuildFromTracking   Condition="'$(BuildType)' != 'Build' or '$(ForceRebuild)' == 'true'">false</MinimalRebuildFromTracking>
      </ClCompile>
    </ItemGroup>

    <GCCCompile Condition="'%(ClCompile.ExcludedFromBuild)'!='true'"
        BuildingInIDE                      ="$(BuildingInsideVisualStudio)"
        Sources                            ="@(ClCompile)"

        TrackerLogDirectory                ="%(ClCompile.TrackerLogDirectory)"

        TLogReadFiles                      ="@(CLTLogReadFiles)"
        TLogWriteFiles                     ="@(CLTLogWriteFiles)"
        ToolExe                            ="$(CLToolExe)"
        ToolPath                           ="$(CLToolPath)"
        TrackFileAccess                    ="$(TrackFileAccess)"
        MinimalRebuildFromTracking         ="%(ClCompile.MinimalRebuildFromTracking)"

        AcceptableNonZeroExitCodes         ="%(ClCompile.AcceptableNonZeroExitCodes)"

        EchoCommandLines                   ="%(ClCompile.EchoCommandLines)"
        GCCToolPath                        ="$(GccCompiler)"
        PropertyXmlFile                    ="$(VCTargetsPath)\Platforms\NaCl\Props\nacl_gcc_compile.xml"
    >
    </GCCCompile>

  </Target>


  <!-- *******************************************************************************************
        Lib
       ******************************************************************************************* -->

  <!-- Lib script based on: MSBuild\Microsoft.Cpp\v4.0\Microsoft.CppCommon.targets -->

  <Target Name="Lib"
          Condition="'@(Lib)' != ''">
    
    <ItemGroup>
      <Lib>
        <MinimalRebuildFromTracking Condition="'%(Lib.MinimalRebuildFromTracking)' == '' and '$(BuildType)' == 'Build' and '$(ForceRebuild)' != 'true'">true</MinimalRebuildFromTracking>
      </Lib>
    </ItemGroup>

    <GCCLib
        BuildingInIDE                  ="$(BuildingInsideVisualStudio)"
		    Sources                        ="@(Lib)"

        OutputFile                     ="%(Lib.OutputFile)"

        TrackerLogDirectory            ="%(Lib.TrackerLogDirectory)"

        TLogReadFiles                  ="@(LIBTLogReadFiles)"
        TLogWriteFiles                 ="@(LIBTLogWriteFiles)"
        ToolExe                        ="$(LIBToolExe)"
        ToolPath                       ="$(LIBToolPath)"
        TrackFileAccess                ="$(TrackFileAccess)"
        MinimalRebuildFromTracking     ="%(Lib.MinimalRebuildFromTracking)"

        AcceptableNonZeroExitCodes     ="%(Lib.AcceptableNonZeroExitCodes)"

        EchoCommandLines               ="%(Lib.EchoCommandLines)"
        GCCToolPath                    ="$(GccLibrarian)"
        PropertyXmlFile                ="$(VCTargetsPath)\Platforms\NaCl\Props\nacl_gcc_lib.xml"
      >
      	<Output TaskParameter="SkippedExecution" PropertyName="LibSkippedExecution" />
    </GCCLib>

    <Message Condition="'$(LibSkippedExecution)' == 'false'" Text="$(MSBuildProjectFile) -&gt; $(TargetPath)" Importance="High" />
    
  </Target>
  


  <!-- *******************************************************************************************
        Link
       ******************************************************************************************* -->

  <Target Name="Link"
          Condition="'@(Link)' != ''">

    <PropertyGroup>
      <Link_MinimalRebuildFromTracking Condition="'@(Link->AnyHaveMetadataValue('MinimalRebuildFromTracking', 'false'))' == 'true'">false</Link_MinimalRebuildFromTracking>
      <Link_MinimalRebuildFromTracking Condition="'$(BuildType)' != 'Build' or '$(ForceRebuild)' == 'true'" >false</Link_MinimalRebuildFromTracking>
      <Link_MinimalRebuildFromTracking Condition="'$(Link_MinimalRebuildFromTracking)' == ''">true</Link_MinimalRebuildFromTracking>
    </PropertyGroup>
    
    <GCCLink
        BuildingInIDE                  ="$(BuildingInsideVisualStudio)"
        Sources                        ="@(Link)"

        OutputFile                     ="%(Link.OutputFile)"
        
        TrackerLogDirectory            ="%(Link.TrackerLogDirectory)"

        TLogReadFiles                  ="@(LinkTLogReadFiles)"
        TLogWriteFiles                 ="@(LinkTLogWriteFiles)"
        ToolExe                        ="$(LinkToolExe)"
        ToolPath                       ="$(LinkToolPath)"
        TrackFileAccess                ="$(TrackFileAccess)"
        MinimalRebuildFromTracking     ="$(Link_MinimalRebuildFromTracking)"

        AcceptableNonZeroExitCodes     ="%(Link.AcceptableNonZeroExitCodes)"

        EchoCommandLines               ="%(Link.EchoCommandLines)"        
        GCCToolPath                    ="$(GccLinker)"        
        PropertyXmlFile                ="$(VCTargetsPath)\Platforms\NaCl\Props\nacl_gcc_link.xml"
    >
      <Output TaskParameter="SkippedExecution" PropertyName="LinkSkippedExecution" />
    </GCCLink>

    <Message Condition="'$(LinkSkippedExecution)' == 'false'" Text="$(MSBuildProjectFile) -&gt; $(TargetPath)" Importance="High" />
    
  </Target>

  <!-- Override the Microsoft.CppBuild.targets stuff -->
  <Import Project="$(VCTargetsPath)\Platforms\NaCl\vs-nacl.CppBuild.targets" />
	
	
  <Import Project="$(VCTargetsPath)\Platforms\NaCl\PlatformToolsets\$(PlatformToolset)\Microsoft.Cpp.NaCl.$(PlatformToolset).targets" Condition="(exists('$(VCTargetsPath)\Platforms\NaCl\PlatformToolsets\$(PlatformToolset)\Microsoft.Cpp.NaCl.$(PlatformToolset).targets'))" />
  <Import Project="$(VCTargetsPath)\Platforms\NaCl\ImportAfter\*.targets" Condition="Exists('$(VCTargetsPath)\Platforms\NaCl\ImportAfter')" />
</Project>



